{"ast":null,"code":"var _jsxFileName = \"/Users/ctellezesp/Documents/react/robertoyoc.com/src/App.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport './App.css';\n\nconst axios = require('axios');\n\nfunction Chat() {\n  const [message, setMessage] = useState('');\n  const [messages, addMessage] = useState([]);\n  useEffect(() => {\n    axios.post('http://127.0.0.1:5002/getMessage', {\n      message: \"hi\"\n    }).then(res => {\n      console.log(res.data.text);\n      messages.push({\n        message: res.data.text,\n        from: 'chatbot'\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function postMessage() {\n    if (message === '') {\n      alert('Message should not be empty');\n    } else {\n      messages.push({\n        message: message,\n        from: 'user'\n      });\n      setMessage('');\n      console.log('fetching...');\n      axios.post('http://127.0.0.1:5002/getMessage', {\n        message: message\n      }).then(res => {\n        console.log(res.data.text);\n        messages.push({\n          message: res.data.text,\n          from: 'chatbot'\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  function showData() {\n    console.log(messages);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, messages.map((message, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: message.from === 'user' ? 'from-user' : 'from-chatbox',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: message.from === 'user' ? 'user-msg' : 'chatbot-msg',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, message.message));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"send\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: message,\n    placeholder: \"Type your message here\",\n    onChange: e => setMessage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: postMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 41\n    }\n  }, \"send\")))), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      position: \"fixed\",\n      top: \"0\",\n      left: \"0\"\n    },\n    onClick: showData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Get Data\"));\n}\n\nclass Chatbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      message: ''\n    };\n    this.addMessage = this.addMessage.bind(this);\n    this.postMessage = this.postMessage.bind(this);\n  }\n\n  componentDidMount() {\n    axios.post('http://127.0.0.1:5002/getMessage', {\n      message: \"hi\"\n    }).then(res => {\n      console.log(res.data.text);\n      this.setState({\n        messages: [this.state.messages, {\n          message: res.data.text,\n          from: 'chatbox'\n        }]\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  addMessage(event) {\n    this.setState({\n      message: event.target.value\n    });\n  }\n\n  postMessage() {\n    if (this.state.message === '') {\n      alert('Message should not be empty');\n    } else {\n      this.setState({\n        messages: [...this.state.messages, {\n          message: this.state.message,\n          from: 'user'\n        }]\n      });\n      console.log('fetching...');\n      axios.post('http://127.0.0.1:5002/getMessage', {\n        message: this.state.message\n      }).then(res => {\n        console.log(res.data.text);\n        this.setState({\n          messages: [...this.state.messages, {\n            message: res.data.text,\n            from: 'chatbox'\n          }]\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }, this.state.messages.map((message, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: message.from === 'user' ? 'from-user' : 'from-chatbox',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: message.from === 'user' ? 'user-msg' : 'chatbot-msg',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 19\n        }\n      }, message.message));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"send\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Type your message here\",\n      onChange: this.addMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.postMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 48\n      }\n    }, \"send\")))));\n  }\n\n}\n\nexport default Chatbox;","map":{"version":3,"sources":["/Users/ctellezesp/Documents/react/robertoyoc.com/src/App.js"],"names":["React","Component","useState","useEffect","axios","require","Chat","message","setMessage","messages","addMessage","post","then","res","console","log","data","text","push","from","catch","err","postMessage","alert","showData","map","index","e","target","value","position","top","left","Chatbox","constructor","props","state","bind","componentDidMount","setState","event","render"],"mappings":"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","sourcesContent":["import React, {Component, useState, useEffect} from 'react';\nimport './App.css';\nconst axios = require('axios');\n\nfunction Chat() {\n  const [message, setMessage] = useState('');\n  const [messages, addMessage] = useState([]); \n\n  useEffect(() => {\n    axios.post('http://127.0.0.1:5002/getMessage', {\n      message: \"hi\"\n    })\n    .then (res => {\n      console.log(res.data.text);\n      messages.push({\n        message: res.data.text,\n        from: 'chatbot'\n      })\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function postMessage() {\n    if(message === '') {\n      alert('Message should not be empty');\n    } else {\n      messages.push(\n        {\n          message: message,\n          from: 'user'\n        }\n      );\n      setMessage('');\n      console.log('fetching...');\n      axios.post('http://127.0.0.1:5002/getMessage', {\n      message: message\n      })\n      .then (res => {\n        console.log(res.data.text);\n        messages.push({\n          message: res.data.text,\n          from: 'chatbot'\n        })\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  function showData() {\n    console.log(messages);\n  }\n\n  return (\n    <div className=\"chat\">\n      <div className=\"main\">\n        <div className=\"messages\">\n          {messages.map((message, index) => {\n            return (\n              <div key={index} className={message.from === 'user' ? 'from-user': 'from-chatbox'}>\n                <p className={message.from === 'user' ? 'user-msg': 'chatbot-msg'}>{message.message}</p>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"send\">\n          <input type=\"text\" value={message} placeholder=\"Type your message here\" onChange={(e) => setMessage(e.target.value)} />\n          <button onClick={postMessage}><i className=\"material-icons\">send</i></button>\n        </div>\n      </div>\n      <button style={{position: \"fixed\", top: \"0\", left: \"0\"}} onClick={showData}>Get Data</button>\n    </div>\n  );\n}\n\nclass Chatbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      message: ''\n    }\n    this.addMessage = this.addMessage.bind(this);\n    this.postMessage = this.postMessage.bind(this);\n  }\n\n  componentDidMount() {\n    axios.post('http://127.0.0.1:5002/getMessage', {\n      message: \"hi\"\n    })\n    .then (res => {\n      console.log(res.data.text);\n      this.setState({\n        messages: [\n          this.state.messages, \n          {\n            message: res.data.text,\n            from: 'chatbox'\n          }\n        ]\n      });\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n  addMessage(event) {\n    this.setState({\n      message: event.target.value\n    });\n  }\n\n  postMessage() {\n    if(this.state.message === '') {\n      alert('Message should not be empty');\n    } else {\n      this.setState({\n        messages: [\n          ...this.state.messages,\n          {\n            message: this.state.message,\n            from: 'user'\n          }\n        ]\n      });\n      console.log('fetching...');\n      axios.post('http://127.0.0.1:5002/getMessage', {\n      message: this.state.message\n      })\n      .then (res => {\n        console.log(res.data.text);\n        this.setState({\n          messages: [\n            ...this.state.messages, \n            {\n              message: res.data.text,\n              from: 'chatbox'\n            }\n          ]\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"chat\">\n        <div className=\"main\">\n          <div className=\"messages\">\n            {this.state.messages.map((message, index) => {\n              return (\n                <div key={index} className={message.from === 'user' ? 'from-user': 'from-chatbox'}>\n                  <p className={message.from === 'user' ? 'user-msg': 'chatbot-msg'}>{message.message}</p>\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"send\">\n            <input type=\"text\" placeholder=\"Type your message here\" onChange={this.addMessage} />\n            <button onClick={this.postMessage}><i className=\"material-icons\">send</i></button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default Chatbox;"]},"metadata":{},"sourceType":"module"}