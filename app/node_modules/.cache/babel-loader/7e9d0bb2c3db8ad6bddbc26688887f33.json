{"ast":null,"code":"var _jsxFileName = \"/Users/ctellezesp/Documents/react/robertoyoc.com/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst axios = require('axios');\n\nexport default function Chat() {\n  const [message, setMessage] = useState('');\n  const [messages, addMessage] = useState([]);\n  useEffect(() => {\n    axios.post('http://127.0.0.1:5002/getMessage', {\n      message: \"hi\"\n    }).then(res => {\n      console.log(res.data.text);\n      messages.push({\n        message: res.data.text,\n        from: 'chatbot'\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function postMessage() {\n    if (message === '') {\n      alert('Message should not be empty');\n    } else {\n      messages.push({\n        message: message,\n        from: 'user'\n      });\n      setMessage('');\n      console.log('fetching...');\n      axios.post('http://127.0.0.1:5002/getMessage', {\n        message: message\n      }).then(res => {\n        console.log(res.data.text);\n        messages.push({\n          message: res.data.text,\n          from: 'chatbot'\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  function showData() {\n    console.log(messages);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, messages.map((message, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: message.from === 'user' ? 'from-user' : 'from-chatbox',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: message.from === 'user' ? 'user-msg' : 'chatbot-msg',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, message.message));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"send\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: message,\n    placeholder: \"Type your message here\",\n    onChange: e => setMessage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: postMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 41\n    }\n  }, \"send\")))), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      position: \"fixed\",\n      top: \"0\",\n      left: \"0\"\n    },\n    onClick: showData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Get Data\"));\n}","map":{"version":3,"sources":["/Users/ctellezesp/Documents/react/robertoyoc.com/src/App.js"],"names":["React","useState","useEffect","axios","require","Chat","message","setMessage","messages","addMessage","post","then","res","console","log","data","text","push","from","catch","err","postMessage","alert","showData","map","index","e","target","value","position","top","left"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nconst axios = require('axios');\n\nexport default function Chat() {\n  const [message, setMessage] = useState('');\n  const [messages, addMessage] = useState([]); \n\n  useEffect(() => {\n    axios.post('http://127.0.0.1:5002/getMessage', {\n      message: \"hi\"\n      })\n      .then (res => {\n        console.log(res.data.text);\n        messages.push({\n          message: res.data.text,\n          from: 'chatbot'\n        })\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }, []);\n\n  function postMessage() {\n    if(message === '') {\n      alert('Message should not be empty');\n    } else {\n      messages.push(\n        {\n          message: message,\n          from: 'user'\n        }\n      );\n      setMessage('');\n      console.log('fetching...');\n      axios.post('http://127.0.0.1:5002/getMessage', {\n      message: message\n      })\n      .then (res => {\n        console.log(res.data.text);\n        messages.push({\n          message: res.data.text,\n          from: 'chatbot'\n        })\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  function showData() {\n    console.log(messages);\n  }\n\n  return (\n    <div className=\"chat\">\n      <div className=\"main\">\n        <div className=\"messages\">\n          {messages.map((message, index) => {\n            return (\n              <div key={index} className={message.from === 'user' ? 'from-user': 'from-chatbox'}>\n                <p className={message.from === 'user' ? 'user-msg': 'chatbot-msg'}>{message.message}</p>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"send\">\n          <input type=\"text\" value={message} placeholder=\"Type your message here\" onChange={(e) => setMessage(e.target.value)} />\n          <button onClick={postMessage}><i className=\"material-icons\">send</i></button>\n        </div>\n      </div>\n      <button style={{position: \"fixed\", top: \"0\", left: \"0\"}} onClick={showData}>Get Data</button>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}