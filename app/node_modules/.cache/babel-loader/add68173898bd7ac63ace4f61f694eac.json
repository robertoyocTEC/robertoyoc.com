{"ast":null,"code":"var _jsxFileName = \"/Users/ctellezesp/Documents/react/robertoyoc.com/app/src/chatbox.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport parse from 'html-react-parser';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport SendIcon from '@material-ui/icons/Send';\nimport './App.css';\n\nconst axios = require('axios');\n\nclass Chatbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: 'guest',\n      messages: [],\n      message: ''\n    };\n    this.addMessage = this.addMessage.bind(this);\n    this.postMessage = this.postMessage.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.user != '' || this.props.user != undefined) {\n      this.setState({\n        user: this.props.user\n      });\n    }\n  }\n\n  addMessage(event) {\n    this.setState({\n      message: event.target.value\n    });\n  }\n\n  postMessage() {\n    if (this.state.message === '') {\n      alert('Message should not be empty');\n    } else {\n      this.setState({\n        messages: [...this.state.messages, {\n          message: this.state.message,\n          from: 'user'\n        }],\n        message: ''\n      });\n      console.log('fetching...');\n      axios.post('http://127.0.0.1:5002/getMessage', {\n        message: this.state.message\n      }).then(res => {\n        console.log(res.data.text);\n        this.setState({\n          messages: [...this.state.messages, {\n            message: res.data.text,\n            from: 'chatbox'\n          }]\n        });\n        axios.post('http://localhost:3000/watson', {\n          \"user\": this.state.user,\n          \"message\": this.state.message,\n          \"intent\": res.data.text\n        }).then(res => {\n          console.log(res);\n        }).catch(err => {\n          console.log(err);\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, this.state.messages.map((message, index) => {\n      return message.from === 'user' ? /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"from-user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: message.from === 'user' ? 'user-msg' : 'chatbot-msg',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }\n      }, message.message)) : /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"from-chatbox\",\n        dangerouslySetInnerHTML: {\n          __html: message.message\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      });\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"send\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      xs: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      className: \"txt-msg\",\n      id: \"outlined-basic\",\n      label: \"Message\",\n      variant: \"outlined\",\n      value: this.state.value,\n      placeholder: \"Type your message here\",\n      onChange: this.addMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      xs: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      color: \"primary\",\n      \"aria-label\": \"send\",\n      onClick: this.postMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SendIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    })))))));\n  }\n\n}\n\nexport default Chatbox;","map":{"version":3,"sources":["/Users/ctellezesp/Documents/react/robertoyoc.com/app/src/chatbox.js"],"names":["React","Component","useState","useEffect","parse","Grid","TextField","Fab","SendIcon","axios","require","Chatbox","constructor","props","state","user","messages","message","addMessage","bind","postMessage","componentDidMount","undefined","setState","event","target","value","alert","from","console","log","post","then","res","data","text","catch","err","render","map","index","__html"],"mappings":"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","sourcesContent":["import React, {Component, useState, useEffect} from 'react';\nimport parse from 'html-react-parser';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport SendIcon from '@material-ui/icons/Send';\nimport './App.css';\n\nconst axios = require('axios');\n\n\nclass Chatbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: 'guest',\n      messages: [],\n      message: ''\n    }\n    this.addMessage = this.addMessage.bind(this);\n    this.postMessage = this.postMessage.bind(this);\n  }\n\n  componentDidMount() {\n    if(this.props.user != '' || this.props.user != undefined){\n      this.setState({\n        user: this.props.user\n      });\n    }\n  }\n\n  addMessage(event) {\n    this.setState({\n      message: event.target.value\n    });\n  }\n\n  postMessage() {\n    if(this.state.message === '') {\n      alert('Message should not be empty');\n    } else {\n      this.setState({\n        messages: [\n          ...this.state.messages,\n          {\n            message: this.state.message,\n            from: 'user'\n          }\n        ],\n        message: ''\n      });\n      console.log('fetching...');\n      axios.post('http://127.0.0.1:5002/getMessage', {\n        message: this.state.message\n      })\n      .then (res => {\n        console.log(res.data.text);\n        this.setState({\n          messages: [\n            ...this.state.messages, \n            {\n              message: res.data.text,\n              from: 'chatbox'\n            }\n          ]\n        });\n        axios.post('http://localhost:3000/watson', {\n          \"user\": this.state.user,\n          \"message\": this.state.message,\n          \"intent\": res.data.text\n        })\n        .then(res => {\n          console.log(res);\n        })\n        .catch(err => {\n          console.log(err);\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"chat\">\n        <div className=\"main\">\n          <div className=\"messages\">\n            {this.state.messages.map((message, index) => {\n              return (\n                message.from === 'user' ? \n                <div key={index} className=\"from-user\">\n                    <p className={message.from === 'user' ? 'user-msg': 'chatbot-msg'}>{message.message}</p> \n                </div>:\n                <div key={index} className=\"from-chatbox\" dangerouslySetInnerHTML={{ __html: message.message }}></div>\n              );\n            })}\n          </div>\n          <div className=\"send\">\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={2}>\n                <Grid xs={10}>\n                    <TextField className=\"txt-msg\" id=\"outlined-basic\" label=\"Message\" variant=\"outlined\" value={this.state.value} placeholder=\"Type your message here\" onChange={this.addMessage}/>\n                </Grid>\n                <Grid xs={2}>\n                    <Fab color=\"primary\" aria-label=\"send\" onClick={this.postMessage}>\n                        <SendIcon />\n                    </Fab>\n                </Grid>\n              </Grid>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default Chatbox;"]},"metadata":{},"sourceType":"module"}