{"ast":null,"code":"var _jsxFileName = \"/Users/ctellezesp/Documents/react/robertoyoc.com/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\n\nconst axios = require('axios');\n\nexport default function Chat() {\n  const [message, setMessage] = useState('');\n  const [messages, addMessage] = useState([]);\n\n  function postMessage() {\n    if (message === '') {\n      alert('Message should not be empty');\n    } else {\n      messages.push({\n        message: message,\n        from: 'user'\n      });\n      setMessage('');\n      console.log('fetching...');\n      axios.post('http://127.0.0.1:5002/getMessage', {\n        message: message\n      }).then(res => {\n        console.log(res.data.text);\n        messages.push({\n          message: res.data.text,\n          from: 'chatbot'\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, messages.map((message, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: message.from === 'user' ? 'from-user' : 'from-chatbox',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, message.from === 'user' && /*#__PURE__*/React.createElement(\"p\", {\n      className: message.from === 'user' ? 'user-msg' : 'chatbot-msg',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 45\n      }\n    }, message.message), message.from === 'chatbot' && message.message);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"send\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: message,\n    placeholder: \"Type your message here\",\n    onChange: e => setMessage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: postMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 41\n    }\n  }, \"send\")))));\n}","map":{"version":3,"sources":["/Users/ctellezesp/Documents/react/robertoyoc.com/src/App.js"],"names":["React","useState","axios","require","Chat","message","setMessage","messages","addMessage","postMessage","alert","push","from","console","log","post","then","res","data","text","catch","err","map","index","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nconst axios = require('axios');\n\nexport default function Chat() {\n  const [message, setMessage] = useState('');\n  const [messages, addMessage] = useState([]); \n\n  function postMessage() {\n    if(message === '') {\n      alert('Message should not be empty');\n    } else {\n      messages.push(\n        {\n          message: message,\n          from: 'user'\n        }\n      );\n      setMessage('');\n      console.log('fetching...');\n      axios.post('http://127.0.0.1:5002/getMessage', {\n      message: message\n      })\n      .then (res => {\n        console.log(res.data.text);\n        messages.push({\n          message: res.data.text,\n          from: 'chatbot'\n        })\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    }\n    \n\n  }\n\n  return (\n    <div className=\"chat\">\n      <div className=\"main\">\n        <div className=\"messages\">\n          {messages.map((message, index) => {\n            return (\n              <div key={index} className={message.from === 'user' ? 'from-user': 'from-chatbox'}>\n                {message.from === 'user' && <p className={message.from === 'user' ? 'user-msg': 'chatbot-msg'}>{message.message}</p>}\n                {message.from === 'chatbot' && message.message}\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"send\">\n          <input type=\"text\" value={message} placeholder=\"Type your message here\" onChange={(e) => setMessage(e.target.value)} />\n          <button onClick={postMessage}><i className=\"material-icons\">send</i></button>\n        </div>\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}